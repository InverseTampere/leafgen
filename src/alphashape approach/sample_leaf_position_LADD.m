function leafStartPoint = sample_leaf_position_LADD(fDist_h, ...
                                                    fDist_d, ...
                                                    fDist_c, ...
                                                    maxfDist_h, ...
                                                    maxfDist_d, ...
                                                    maxfDist_c, ...
                                                    maxHorzDist, ...
                                                    maxHeight, ...
                                                    stemCoordinates ...
                                                    )

accepted = 0;
while accepted == 0
    % Proposal values for the variables
    hProposal = rand(1);
    dProposal = rand(1);
    cProposal = 2*pi*rand(1);
    % LADD value on propsal point
    funValues = [fDist_h(hProposal),fDist_d(dProposal), ...
        fDist_c(cProposal)];
    vertValues = rand(1,3).*[maxfDist_h,maxfDist_d,maxfDist_c];
    if all(vertValues < funValues)
        % Probing the edge of alpha shape
        edgeValue = stem_to_alphashape_edge(shp,hProposal, ...
                                            cProposal, ...
                                            maxHorzDist, ...
                                            maxHeight, ...
                                            stemCoordinates);
        % Check the if the distance to edge is nonzero
        if edgeValue == 0
            % The first two probe points are not inside the shape,
            % sample a new proposal point
            continue
        end
        edgeValue = yCoord(edgeIndex);
        % Position coordinates of the leaf start point
        hLeaf = maxHeight*hProposal;
        dLeaf = edgeValue*dProposal;
        cLeaf = cProposal;
        if flagStemCoordinates == true
            leafStartPoint = (rotation_matrix([0 0 1],cLeaf) ...
                *[0 1 0]')'*dLeaf ...
                +[stemCen(1:2) hLeaf];
        else
            leafStartPoint = (rotation_matrix([0 0 1],cLeaf) ...
                *[0 1 0]')'*dLeaf + [0 0 hLeaf];
        end
        accepted = 1;
    end
end

end